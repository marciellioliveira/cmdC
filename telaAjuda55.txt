
------------------------------------------------------------
!                                                          !
!                    ESTRUTURAS DINAMICAS                  !
!                                                          !
------------------------------------------------------------

55 - CONCEITOS FUNDAMENTAIS: Interface do tipo pilha

Consideraremos duas implementações de pilha: usando vetor
e usando lista encadeada. Para simplificar a exposição, 
consideraremos uma pilha que armazena valores reais. 

Independente da estratégia de implementação, podemos 
definir a interface do tipo abstrato que representa uma 
estrutura de pilha. 

A interface é composta pelas operações que estarão 
disponibilizadas para manipular e acessar as informações
da pilha. Neste exemplo, vamos considerar a implementação
de cinco operações:

• criar uma estrutura de pilha;
• inserir um elemento no topo (push);
• remover o elemento do topo (pop);
• verificar se a pilha está vazia;
• liberar a estrutura de pilha.

O arquivo pilha.h, que representa a interface do tipo, 
pode conter o seguinte código:

typedef struct pilha Pilha;

Pilha* cria (void);

void push (Pilha* p, float v);

float pop (Pilha* p);

int vazia (Pilha* p);

void libera (Pilha* p);

A função cria aloca dinamicamente a estrutura da pilha, 
inicializa seus campos e retorna seu ponteiro; as funções 
push e pop inserem e retiram, respectivamente, um valor real 
na pilha; a função vazia informa se a pilha está ou não 
vazia; e a função libera destrói a pilha, liberando toda a 
memória usada pela estrutura.

		- W. Celes e J. L. Rangel
